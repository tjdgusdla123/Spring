<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	
	<!-- spring mvc project에서 50여가지의 설정을 대신해주는 태그 
	spring mvc 의 어노테이션을 사용할 수 있도록 해주는 태그 -->
	<annotation-driven />
	
     <!-- 변화가 거의 없는 파이들을 저장해 두면 캐싱을 해서 이용할수 수 있도록 해주는 설정
	 기본은 root(webapp,webcontent)디렉토리의 resources 캐싱 시간을 설정하는 것도 가능 
	  캐싱(재사용을 빠르게 하기위해서 로컬에 저장해 두는 것)을 수행할 디렉토리를 설정 
     css, js, 기타 자원에 대해서 캐싱을 하고자 하는 겨우 설정을 변경하거나 그대로 사용-->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- ViewResolver 설정 controller에서 forwording 하라고 view 이름을 리턴하면 여기 조합과 연산을 해서 실제 출력할 뷰를 결정 -->
	<!-- controller에서 forwording 하는 view 이름을 넘겨주었을 때 실제 사용할 view를 결정짓는 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 어노테이션이 붙은 클래스들의 bean을 자동 생성해 줄 root 패키지를 설정 
	spring mvc project에서는 이 패키지 안에 클래스들을 생성 하위 패키지를 만드는 것은 관계없음-->
	<!-- 클래스를 만들 때는 이 패키지 안에 만드는 것을 권장 다른 패키지에 만들었다면 다른 패키지도 추가해주면 됩니다. -->
	<context:component-scan base-package="naver.dkxkgh98.memberinfotbl" />
	
	
	
</beans:beans>
